{"meta":{"title":"ZJC's BLOG","subtitle":"","description":"","author":"ZJC","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"使用 Github 和 Hexo 搭建自己的独立博客","slug":"使用 Github 和 Hexo 搭建自己的独立博客","date":"2020-05-20T10:01:21.916Z","updated":"2020-05-21T05:48:10.328Z","comments":true,"path":"2020/05/20/使用 Github 和 Hexo 搭建自己的独立博客/","link":"","permalink":"http://yoursite.com/2020/05/20/%E4%BD%BF%E7%94%A8%20Github%20%E5%92%8C%20Hexo%20%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2/","excerpt":"我的博客地址：https://supremezjc.github.io","text":"我的博客地址：https://supremezjc.github.io @TOC ● 入门Github PagesGithub Pages可以被认为是用户编写的、托管在github上的静态网页。使用Github Pages可以为你提供一个免费的服务器，免去了自己搭建服务器和写数据库的麻烦。此外还可以绑定自己的域名。 HexoHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 ● 安装 Node.js点击此处访问官网，按需下载相应版本，默认安装可以了。如果不懂可以看我的另一篇文章nodejs的安装和配置 ● 安装 Git点击此处访问官网，按需下载相应版本，默认安装即可 • 检验Git是否安装成功同时按下 Win 键和 R 键打开运行窗口,输入 cmd ，然后输入以下命令，有相应版本信息显示则安装成功，若不正确可以卸载软件重新安装，此外若安装成功，在桌面右键鼠标，可以看到菜单里多了 Git GUI Here 和 Git Bash Here两个选项，第一个是图形界面的Git操作，另一个是命令行 123$ git --version $ node -v $ npm -v ● 安装Hexo选择一个磁盘，新建一个文件夹，自己重命名文件夹（如：我的文件夹为：Ｅ\\TRHX_Blog），博客相关文件将储存在此文件夹下，在该文件夹下右键鼠标，点击 Git Bash Here，输入以下 npm 命令即可安装，第一个命令表示安装 hexo，第二个命令表示安装 hexo 部署到 git page 的 deployer，如图所示即为安装成功 12$ npm install hexo-cli -g $ npm install hexo-deployer-git --save • Hexo 初始化配置在刚才新建的文件夹里面再次新建一个 Hexo 文件夹（如：我的文件夹为：E\\TRHX_Blog\\Hexo）,进入该 Hexo 文件夹右键鼠标，点击 Git Bash Here，输入以下命令，如图所示则安装成功 1$ hexo init Hexo 安装完成后，将会在指定文件夹中新建所需要的文件，Hexo 文件夹下的目录如下： ● 本地查看效果执行以下命令，执行完即可登录 http://localhost:4000/ 查看效果 12$ hexo generate $ hexo server 显示以下信息说明操作成功： 1INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop. ● 将博客部署到 Github Pages 上到目前为止，我们的本地博客就成功搭建了，但是现在我们只能通过本地连接查看博客，我们要做的是让其他人也能够访问我们的博客，这就需要我们将博客部署到Github Pages上 • 注册 Github 账户点击此处访问 Github 官网，点击 Sign Up 注册账户 • 创建项目代码库点击 New repository 开始创建，步骤及注意事项见下图： • 配置 SSH 密钥只有配置好 SSH 密钥后，我们才可以通过 git 操作实现本地代码库与 Github 代码库同步，在你第一次新建的文件夹里面（如：我的文件夹为：Ｅ\\TRHX_Blog） Git Bash Here 输入以下命令： 12$ ssh-keygen -t rsa -C \"your email@example.com\" //引号里面填写你的邮箱地址，比如我的是1248164682.qq.com 之后会出现： 123Generating public/private rsa key pair. Enter file in which to save the key (/c/Users/you/.ssh/id_rsa): //到这里可以直接回车将密钥按默认文件进行存储 然后会出现： 123Enter passphrase (empty for no passphrase): //这里是要你输入密码，其实不需要输什么密码，直接回车就行 Enter same passphrase again: 接下来屏幕会显示： 123456Your identification has been saved in /c/Users/you/.ssh/id_rsa. Your public key has been saved in /c/Users/you/.ssh/id_rsa.pub. The key fingerprint is: 这里是各种字母数字组成的字符串，结尾是你的邮箱 The key's randomart image is: 这里也是各种字母数字符号组成的字符串 运行以下命令，将公钥的内容复制到系统粘贴板上 1$ clip &lt; ~/.ssh/id_rsa.pub • 在 GitHub 账户中添加你的公钥① 登陆 GitHub，进入 Settings：② 点击 SSH and GPG Keys：③ 选择 New SSH key：④ 粘贴密钥： • 测试输入以下命令：注意：git@github.com不要做任何更改！ 1$ ssh -T git@github.com 之后会显示：输入 yes 后会显示： • 配置 Git 个人信息Git 会根据用户的名字和邮箱来记录提交，GitHub 也是用这些信息来做权限的处理，输入以下命令进行个人信息的设置，把名称和邮箱替换成你自己的，名字可以不是 GitHub 的昵称，但为了方便记忆，建议与 GitHub 一致 12$ git config --global user.name \"此处填你的用户名\" $ git config --global user.email \"此处填你的邮箱\" 到此为止 SSH Key 配置成功，本机已成功连接到 Github ● 将本地的 Hexo 文件更新到 Github 的库中① 登录 Github 打开自己的项目 your name.github.io② 鼠标移到 Clone or download 按钮，选择 Use SSH③ 一键复制地址④ 打开你创建的 Hexo 文件夹（如：E:\\TRHX_Blog\\Hexo），右键用记事本（Notepad++或者VS code等都可以）打开该文件夹下的 _config.yml 文件⑤ 按下图修改 _config.yml 文件并保存⑥ 在 Hexo 文件夹下分别执行以下命令 12$ hexo g $ hexo d 或者直接执行 1$ hexo g -d 执行完之后会让你输入你的 Github 的账号和密码，如果此时报以下错误，说明你的 deployer 没有安装成功 1ERROR Deployer not found: git 需要执行以下命令再安装一次： 1npm install hexo-deployer-git --save 再执行 hexo g -d，你的博客就会部署到 Github 上了⑦ 访问博客 你的博客地址：https://你的用户名.github.io，比如我的是：https://supemezjc.github.io ,现在每个人都可以通过此链接访问你的博客了。 在博客中发表文章和申请域名请看我的其他文章。这里非常感谢这位博主：https://blog.csdn.net/qq_36759224/article/details/82121420他写的非常详细。","categories":[],"tags":[]},{"title":"26 种不同的编程语言的 “Hello World” 程序","slug":"26 种不同的编程语言的 “Hello World” 程序","date":"2020-05-18T08:16:47.150Z","updated":"2020-05-21T05:35:40.825Z","comments":true,"path":"2020/05/18/26 种不同的编程语言的 “Hello World” 程序/","link":"","permalink":"http://yoursite.com/2020/05/18/26%20%E7%A7%8D%E4%B8%8D%E5%90%8C%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E7%9A%84%20%E2%80%9CHello%20World%E2%80%9D%20%E7%A8%8B%E5%BA%8F/","excerpt":"下面是用26中计算机语言编写的”Hello World”","text":"下面是用26中计算机语言编写的”Hello World” 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293941. C#include int main()&#123; printf(\"Hello, World\"); return(0);&#125;2. C++#include int main()&#123; std::cout &lt;&lt; \"Hello World\"; return 0;&#125;3. C#using System;class Program&#123; public static void Main(string[] args) &#123; Console.WriteLine(\"Hello, World\"); &#125;&#125;4. Bashecho \"Hello, World\"5. BasicPRINT \"Hello, World\"6. HTML Hello, World7. Javapublic class Main &#123; public static void main(String[] args) &#123; System.out.println(\"Hello, World!\"); &#125;&#125;8. Clipper? \"Hello, World\"9. Delphiprogram HelloWorld;begin Writeln('Hello, World');end.10. CoffeeScriptconsole.log 'Hello, World'11. MatLabdisp('Hello, World')12. Juliaprintln(\"Hello, World\")13. JavaScriptdocument.write('Hello, World');14. Logoprint [Hello, World]15. jQuery$(\"body\").append(\"Hello, World\");16. Perl 5print \"Hello, World\";17. Pascalprogram HelloWorld;begin WriteLn('Hello, World');end.18. Objective-C#import #import int main(void)&#123; NSLog(@\"Hello, World\"); return 0;&#125;19. Visual Basic .NETModule Module1 Sub Main() Console.WriteLine(\"Hello, World\") End SubEnd Module20. Rcat('Hello, World')21. VBScriptMsgBox \"Hello, World\"22. XSLT Hello, World23. Processingvoid setup()&#123; println(\"Hello, World\");&#125;24. Rubyputs \"Hello, World\"25. Swiftprint(\"Hello, World\")26. Pythonprint (\"Hello, World\")","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-05-16T05:47:20.881Z","updated":"2020-05-21T05:31:46.057Z","comments":true,"path":"2020/05/16/hello-world/","link":"","permalink":"http://yoursite.com/2020/05/16/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}